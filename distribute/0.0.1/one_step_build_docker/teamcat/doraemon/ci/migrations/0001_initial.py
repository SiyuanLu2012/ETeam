# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2018-08-06 01:50
from __future__ import unicode_literals

from django.db import migrations, models
import model_managers.ci_model_manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutoCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('PackageName', models.CharField(max_length=255)),
                ('ClassName', models.CharField(max_length=255, null=True)),
                ('CaseName', models.CharField(max_length=255, null=True)),
                ('CaseType', models.IntegerField()),
                ('ProjectID', models.IntegerField()),
                ('ModuleID', models.IntegerField(default=0, null=True)),
                ('InterfaceID', models.IntegerField(default=0, null=True)),
                ('CaseTag', models.CharField(max_length=255, null=True)),
                ('Version', models.IntegerField(default=0, null=True)),
                ('Desc', models.CharField(max_length=500, null=True)),
            ],
            options={
                'db_table': 'autotesting_testcase',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.AutoCaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='AutoCaseResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('TestCaseID', models.IntegerField()),
                ('TaskResultID', models.IntegerField()),
                ('StartTime', models.DateTimeField(null=True)),
                ('EndTime', models.DateTimeField(null=True)),
                ('Result', models.IntegerField(default=0)),
                ('Error', models.CharField(max_length=1000, null=True)),
                ('StackTrace', models.CharField(max_length=5000, null=True)),
                ('BugID', models.IntegerField(default=0)),
                ('FailCategoryID', models.IntegerField(default=0)),
                ('ReRunID', models.IntegerField(default=0)),
                ('FailType', models.IntegerField(default=0)),
                ('FailNote', models.CharField(max_length=255, null=True)),
                ('CaseVersion', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'autotesting_case_result',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.AutoCaseResultManager()),
            ],
        ),
        migrations.CreateModel(
            name='AutoTestingTaskResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('TaskHistoryID', models.IntegerField()),
                ('Total', models.IntegerField(default=0, null=True)),
                ('Pass', models.IntegerField(default=0, null=True)),
                ('Fail', models.IntegerField(default=0, null=True)),
                ('Aborted', models.IntegerField(default=0, null=True)),
                ('TaskUUID', models.CharField(max_length=128)),
                ('ParentResultID', models.IntegerField(default=0, null=True)),
                ('RuntimeEnv', models.IntegerField(default=0, null=True)),
                ('AgentID', models.IntegerField(default=0, null=True)),
                ('MobileDeviceID', models.IntegerField(default=0, null=True)),
                ('BuildMessage', models.CharField(max_length=255, null=True)),
                ('Status', models.IntegerField()),
            ],
            options={
                'db_table': 'autotesting_task_result',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.AutoTaskResultManager()),
            ],
        ),
        migrations.CreateModel(
            name='CaseTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('TagName', models.CharField(max_length=255)),
                ('TagDesc', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'case_tag',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CaseTagManager()),
            ],
        ),
        migrations.CreateModel(
            name='CICredentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('UserName', models.CharField(max_length=100, null=True)),
                ('Password', models.CharField(max_length=100, null=True)),
                ('SSHKey', models.CharField(default='', max_length=1000, null=True)),
                ('Scope', models.IntegerField()),
                ('CredentialType', models.IntegerField(default=1)),
                ('Creator', models.IntegerField()),
                ('Description', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'ci_credentials',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CICredentialsManager()),
            ],
        ),
        migrations.CreateModel(
            name='CIDeployService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('ServiceName', models.CharField(max_length=100)),
                ('DeployDir', models.CharField(max_length=500)),
                ('AccessLog', models.CharField(default='', max_length=1000, null=True)),
                ('ErrorLog', models.CharField(default='', max_length=1000, null=True)),
                ('StartCommand', models.CharField(default='', max_length=500, null=True)),
                ('StopCommand', models.CharField(default='', max_length=500, null=True)),
                ('RestartCommand', models.CharField(default='', max_length=500, null=True)),
                ('RelatedFiles', models.CharField(default='', max_length=500, null=True)),
                ('DeployScripts', models.CharField(default='', max_length=500, null=True)),
                ('AdvanceConfig', models.CharField(default='', max_length=50, null=True)),
                ('Project', models.IntegerField()),
            ],
            options={
                'db_table': 'ci_deploy_service',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CIDeployServiceManager()),
            ],
        ),
        migrations.CreateModel(
            name='CIServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('ServerName', models.CharField(max_length=100)),
                ('Host', models.CharField(max_length=100)),
                ('RemoteDir', models.CharField(max_length=200, null=True)),
                ('Port', models.IntegerField()),
                ('Scope', models.IntegerField()),
                ('Description', models.CharField(max_length=100, null=True)),
                ('Creator', models.IntegerField()),
                ('Credential', models.IntegerField()),
            ],
            options={
                'db_table': 'ci_server',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CICredentialsManager()),
            ],
        ),
        migrations.CreateModel(
            name='CITask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('TaskName', models.CharField(max_length=150)),
                ('Project', models.IntegerField(default=0)),
                ('TaskType', models.IntegerField(default=0)),
                ('TaskConfig', models.CharField(default='', max_length=50)),
                ('DeployService', models.IntegerField(default=0)),
                ('TaskHistory', models.IntegerField(default=0)),
                ('Tags', models.CharField(max_length=50, null=True)),
                ('LastRunTime', models.DateTimeField(null=True)),
                ('Schedule', models.CharField(max_length=30, null=True)),
                ('Creator', models.IntegerField(default=0)),
                ('Description', models.CharField(max_length=500, null=True)),
                ('BuildVersion', models.IntegerField(default=0)),
                ('HistoryCleanStrategy', models.IntegerField(default=10)),
                ('LastHistory', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'ci_task',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CITaskManager()),
            ],
        ),
        migrations.CreateModel(
            name='CITaskFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('FlowName', models.CharField(max_length=50)),
                ('Project', models.IntegerField(default=0)),
                ('LastRunStatus', models.IntegerField(default=1)),
                ('LastRunTime', models.DateTimeField(null=True)),
                ('Creator', models.IntegerField(default=0)),
                ('Description', models.CharField(max_length=500, null=True)),
                ('LastHistory', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'ci_taskflow',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CITaskFlowManager()),
            ],
        ),
        migrations.CreateModel(
            name='CITaskFlowHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('TaskFlow', models.IntegerField()),
                ('Status', models.IntegerField(default=1)),
                ('StartTime', models.DateTimeField(null=True)),
                ('EndTime', models.DateTimeField(null=True)),
                ('StartedBy', models.IntegerField()),
                ('TQUUID', models.CharField(max_length=500, null=True)),
            ],
            options={
                'db_table': 'ci_taskflow_history',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CITaskFlowHistoryManager()),
            ],
        ),
        migrations.CreateModel(
            name='CITaskFlowSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('SectionName', models.CharField(max_length=50)),
                ('TaskFlow', models.IntegerField()),
                ('SectionOrder', models.IntegerField()),
                ('CITasks', models.CharField(default='0,', max_length=200)),
            ],
            options={
                'db_table': 'ci_taskflow_section',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CITaskFlowSectionManager()),
            ],
        ),
        migrations.CreateModel(
            name='CITaskHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('CITaskID', models.IntegerField()),
                ('StartTime', models.DateTimeField(null=True)),
                ('EndTime', models.DateTimeField(null=True)),
                ('Tags', models.CharField(max_length=50, null=True)),
                ('PackageID', models.CharField(max_length=500, null=True)),
                ('LogFileID', models.CharField(max_length=500, null=True)),
                ('ChangeLog', models.CharField(max_length=1000, null=True)),
                ('BuildStatus', models.IntegerField()),
                ('BuildLogID', models.IntegerField(default=0)),
                ('TaskQueueID', models.IntegerField()),
                ('TaskUUID', models.CharField(max_length=255, null=True)),
                ('BuildMessage', models.CharField(max_length=255, null=True)),
                ('BuildErrorCode', models.IntegerField(default=0, null=True)),
                ('CodeVersion', models.CharField(max_length=255, null=True)),
                ('StartedBy', models.IntegerField()),
                ('BuildVersion', models.IntegerField()),
                ('ProjectVersion', models.IntegerField()),
                ('PackageInfo', models.CharField(max_length=255, null=True)),
                ('BuildParameterID', models.CharField(max_length=30, null=True)),
                ('AgentID', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'ci_task_history',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CITaskHistoryManager()),
            ],
        ),
        migrations.CreateModel(
            name='CITaskPlugin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('PluginName', models.CharField(max_length=50)),
                ('PluginSection', models.CharField(max_length=50)),
                ('PluginLabelColor', models.CharField(max_length=10)),
                ('Description', models.CharField(max_length=500, null=True)),
                ('TaskType', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ci_task_plugin',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.CIPluginManager()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('EnvID', models.IntegerField()),
                ('HostIP', models.CharField(max_length=255)),
                ('HostService', models.CharField(max_length=255)),
                ('Description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'ci_servicehost',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.ServiceHostManager()),
            ],
        ),
        migrations.CreateModel(
            name='UnitTestCaseResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreateTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=1)),
                ('TestCaseName', models.CharField(max_length=100, null=True)),
                ('TaskResultID', models.IntegerField(default=0)),
                ('StartTime', models.DateTimeField(null=True)),
                ('EndTime', models.DateTimeField(null=True)),
                ('Result', models.IntegerField(default=0)),
                ('Error', models.CharField(max_length=1000, null=True)),
                ('StackTrace', models.CharField(max_length=5000, null=True)),
                ('BugID', models.IntegerField(default=0)),
                ('FailCategoryID', models.IntegerField(default=0)),
                ('ReRunID', models.IntegerField(default=0)),
                ('FailType', models.IntegerField(default=0)),
                ('FailNote', models.CharField(max_length=255, null=True)),
                ('CaseVersion', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'unittest_case_result',
            },
            managers=[
                ('objects', model_managers.ci_model_manager.UnitTestCaseResultManager()),
            ],
        ),
    ]
