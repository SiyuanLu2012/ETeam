# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2018-08-06 01:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import model_managers.project_model_manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IssueActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('Issue', models.IntegerField()),
                ('OldValue', models.CharField(max_length=2500, null=True)),
                ('NewValue', models.CharField(max_length=2500, null=True)),
                ('FieldName', models.CharField(max_length=20, null=True)),
                ('FieldDesc', models.CharField(max_length=50, null=True)),
                ('ActionType', models.IntegerField()),
                ('ActionFlag', models.IntegerField()),
                ('Creator', models.IntegerField()),
                ('Message', models.CharField(max_length=2500, null=True)),
            ],
            options={
                'db_table': 'issue_activity',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueActivityManager()),
            ],
        ),
        migrations.CreateModel(
            name='IssueFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('Project', models.IntegerField()),
                ('Creator', models.IntegerField()),
                ('Scope', models.IntegerField(default=1)),
                ('FilterName', models.CharField(max_length=50)),
                ('FilterString', models.CharField(max_length=500, null=True)),
                ('FilterUIConfig', models.CharField(max_length=500, null=True)),
                ('FilterCacheString', models.CharField(max_length=500, null=True)),
            ],
            options={
                'db_table': 'issue_filter',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueFilterManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('PTitle', models.CharField(max_length=100)),
                ('PKey', models.CharField(max_length=10)),
                ('PDescription', models.CharField(max_length=255, null=True)),
                ('PVisiableLevel', models.IntegerField()),
                ('LabelColor', models.CharField(max_length=25, null=True)),
            ],
            options={
                'db_table': 'product',
            },
            managers=[
                ('objects', model_managers.project_model_manager.ProductManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('PBTitle', models.CharField(max_length=100)),
                ('PBKey', models.CharField(max_length=10)),
                ('PBDescription', models.CharField(max_length=255, null=True)),
                ('PBVisiableLevel', models.IntegerField()),
                ('PBPlatform', models.IntegerField()),
                ('PBHttpUrl', models.CharField(max_length=255, null=True)),
                ('PBLead', models.IntegerField()),
                ('PBAvatar', models.CharField(max_length=255, null=True)),
                ('Product', models.IntegerField()),
                ('PBCreator', models.IntegerField()),
            ],
            options={
                'db_table': 'project',
            },
            managers=[
                ('objects', model_managers.project_model_manager.ProjectManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('VersionID', models.IntegerField()),
                ('ProjectID', models.CharField(max_length=50, null=True)),
                ('HistoryID', models.IntegerField()),
                ('Archives', models.CharField(max_length=500, null=True)),
            ],
            options={
                'db_table': 'project_archive',
            },
            managers=[
                ('objects', model_managers.project_model_manager.ArchiveManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCodeUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('ApplicationID', models.IntegerField()),
                ('CodeRepertory', models.CharField(max_length=500, null=True)),
                ('Branch', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'project_code_url',
            },
            managers=[
                ('objects', model_managers.project_model_manager.CodeUrlManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('Project', models.IntegerField()),
                ('Version', models.IntegerField(verbose_name='版本号')),
                ('Status', models.IntegerField(verbose_name='问题状态')),
                ('Processor', models.IntegerField(verbose_name='问题经办人')),
                ('Solver', models.IntegerField(verbose_name='问题解决者')),
                ('Creator', models.IntegerField(verbose_name='问题创建人')),
                ('Severity', models.IntegerField(verbose_name='问题严重性')),
                ('Solution', models.IntegerField(verbose_name='问题解决结果')),
                ('Title', models.CharField(max_length=500, verbose_name='问题标题')),
                ('Desc', models.CharField(default='\u200b<br/>\u200b步骤：<br/>\u200b实际结果：<br/>\u200b期望结果：<br/>\u200b备注：<br/>', max_length=2000, null=True, verbose_name='问题描述')),
                ('Module', models.IntegerField(verbose_name='问题模块')),
                ('ProjectPhase', models.IntegerField(verbose_name='项目阶段')),
                ('IssueCategory', models.IntegerField(verbose_name='问题类别')),
                ('DeviceOS', models.IntegerField(default=0, verbose_name='设备系统')),
                ('OSVersion', models.IntegerField(default=0, verbose_name='设备系统版本')),
                ('Attachments', models.CharField(max_length=500, null=True, verbose_name='附件')),
                ('ResolvedTime', models.DateTimeField(null=True, verbose_name='解决结果')),
                ('ClosedTime', models.DateTimeField(null=True)),
                ('ReopenCounts', models.IntegerField(default=0)),
                ('UpdateTime', models.DateTimeField(null=True)),
                ('Team', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'project_issue',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssueCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('Project', models.IntegerField()),
            ],
            options={
                'db_table': 'project_issue_category',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueConfigFieldManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssueDailyStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('ProjectID', models.IntegerField()),
                ('StatisticsDate', models.DateField()),
                ('OpenedTotal', models.IntegerField()),
                ('ClosedTotal', models.IntegerField()),
                ('FixedTotal', models.IntegerField()),
                ('OpenedToday', models.IntegerField()),
                ('FixedToday', models.IntegerField()),
                ('ReopenedToday', models.IntegerField()),
                ('VersionID', models.IntegerField()),
            ],
            options={
                'db_table': 'issue_daily_statistics',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueDailyStatisticsManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssueResolvedResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('Project', models.IntegerField()),
                ('LabelStyle', models.CharField(max_length=50, null=True)),
                ('Label', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'project_issue_resolved_result',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueConfigFieldManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssueSeverity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('Project', models.IntegerField()),
                ('LabelStyle', models.CharField(max_length=50, null=True)),
                ('Label', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'project_issue_severity',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueConfigFieldManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssueStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('Project', models.IntegerField()),
                ('LabelStyle', models.CharField(max_length=50, null=True)),
                ('Label', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'project_issue_status',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueConfigFieldManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssueVersionStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('ProjectID', models.IntegerField()),
                ('StatisticsDate', models.DateField()),
                ('IssueTotal', models.IntegerField()),
                ('DimensionValue', models.IntegerField()),
                ('Dimension', models.IntegerField()),
                ('VersionID', models.IntegerField()),
            ],
            options={
                'db_table': 'issue_version_statistics',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueVersionStatisticsManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('PMProjectID', models.IntegerField()),
                ('PMRoleID', models.IntegerField()),
                ('PMRoleType', models.IntegerField()),
                ('PMMember', models.IntegerField()),
            ],
            options={
                'db_table': 'project_member',
            },
            managers=[
                ('objects', model_managers.project_model_manager.MemberManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('Name', models.CharField(max_length=100)),
                ('ProjectID', models.IntegerField()),
                ('Description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'project_module',
            },
            managers=[
                ('objects', model_managers.project_model_manager.ModuleManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectOS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'project_os',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueConfigFieldManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectOSVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('OS', models.IntegerField()),
            ],
            options={
                'db_table': 'project_os_version',
            },
            managers=[
                ('objects', model_managers.project_model_manager.ProjectOSVersionManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPhase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IsActive', models.BooleanField(default=True)),
                ('Value', models.IntegerField()),
                ('Name', models.CharField(max_length=50, null=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'project_phase',
            },
            managers=[
                ('objects', model_managers.project_model_manager.IssueConfigFieldManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('PRName', models.CharField(max_length=20)),
                ('PRColor', models.CharField(max_length=50, null=True)),
                ('PRAuthGroup', models.IntegerField()),
                ('PRRoleDesc', models.CharField(max_length=500, null=True)),
            ],
            options={
                'db_table': 'project_role',
            },
            managers=[
                ('objects', model_managers.project_model_manager.RoleManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('TagName', models.CharField(max_length=20)),
                ('TagProjectID', models.IntegerField()),
                ('TagColor', models.CharField(max_length=50, null=True)),
                ('TagAvatar', models.CharField(max_length=255, null=True)),
                ('TagType', models.IntegerField(default=1)),
                ('TagVisableLevel', models.IntegerField()),
                ('TagOwner', models.IntegerField()),
            ],
            options={
                'db_table': 'project_tag',
            },
            managers=[
                ('objects', model_managers.project_model_manager.TagManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('ProjectID', models.IntegerField()),
                ('Title', models.CharField(max_length=255)),
                ('DeadLine', models.DateField(null=True)),
                ('StartDate', models.DateField(null=True)),
                ('FinishedDate', models.DateField(null=True)),
                ('WorkHours', models.IntegerField()),
                ('Owner', models.CharField(max_length=50)),
                ('Creator', models.IntegerField()),
                ('Progress', models.IntegerField()),
                ('Description', models.CharField(max_length=1000, null=True)),
                ('Tags', models.CharField(max_length=50, null=True)),
                ('Status', models.IntegerField()),
                ('Priority', models.IntegerField(default=1)),
                ('Version', models.IntegerField(default=0)),
                ('Parent', models.ForeignKey(db_column='Parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Children', to='project.Task')),
            ],
            options={
                'db_table': 'project_task',
            },
            managers=[
                ('objects', model_managers.project_model_manager.TaskManager()),
            ],
        ),
        migrations.CreateModel(
            name='TestApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('ProjectID', models.IntegerField()),
                ('VersionID', models.IntegerField()),
                ('Topic', models.CharField(max_length=200, null=True)),
                ('Commitor', models.IntegerField(default=0)),
                ('TestingFeature', models.CharField(max_length=2000)),
                ('TestingAdvice', models.CharField(max_length=2000)),
                ('Attachment', models.CharField(max_length=50, null=True)),
                ('CommitTime', models.DateTimeField(null=True)),
                ('Status', models.IntegerField()),
                ('EmailNotificationStatus', models.CharField(default='0,0,0,0,0', max_length=20)),
                ('Testers', models.CharField(default='0,0', max_length=100)),
                ('ExpectCommitDate', models.DateTimeField(null=True)),
                ('TestingDeadLineDate', models.DateTimeField(null=True)),
                ('TestingFinishedDate', models.DateTimeField(null=True)),
                ('ProjectModuleID', models.IntegerField(default=0)),
                ('ProjectCode', models.IntegerField(default=0)),
                ('Creator', models.IntegerField(default=0)),
                ('TestingStartDate', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'project_test_application',
            },
            managers=[
                ('objects', model_managers.project_model_manager.TestApplicationManager()),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('VProjectID', models.IntegerField()),
                ('VVersion', models.CharField(max_length=50)),
                ('VStartDate', models.DateField(null=True)),
                ('VReleaseDate', models.DateField(null=True)),
                ('VDescription', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'project_version',
            },
            managers=[
                ('objects', model_managers.project_model_manager.VersionManager()),
            ],
        ),
        migrations.CreateModel(
            name='WebHook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreationTime', models.DateTimeField(auto_now_add=True)),
                ('IsActive', models.BooleanField(default=True)),
                ('WHProjectID', models.IntegerField()),
                ('WHURL', models.CharField(max_length=500)),
                ('WHParameters', models.CharField(max_length=500, null=True)),
                ('WHLabel', models.CharField(max_length=50, null=True)),
                ('WHIsDefault', models.BooleanField(default=False)),
                ('WHCatagory', models.IntegerField()),
                ('WHCreator', models.IntegerField()),
            ],
            options={
                'db_table': 'project_webhook',
            },
            managers=[
                ('objects', model_managers.project_model_manager.WebHookManager()),
            ],
        ),
    ]
