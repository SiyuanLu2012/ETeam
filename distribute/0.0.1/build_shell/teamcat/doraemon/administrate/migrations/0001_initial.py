#coding=utf-8
# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-06-09 08:41
from __future__ import unicode_literals

from django.db import migrations, models
import model_managers.administrate_model_manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DeviceNumber', models.CharField(max_length=10)),
                ('DeviceName', models.CharField(max_length=100)),
                ('DeviceOS', models.IntegerField()),
                ('DeviceOSVersion', models.IntegerField()),
                ('DeviceScreenSize', models.IntegerField()),
                ('DeviceStatus', models.IntegerField()),
                ('DeviceType', models.IntegerField()),
                ('DeviceSerialNum', models.CharField(max_length=100, null=True)),
                ('DeviceAvatar', models.IntegerField(default=0)),
                ('DeviceBorrower', models.IntegerField(default=0)),
                ('DeviceBorrorwTime', models.DateTimeField(null=True)),
                ('DeviceReturnTime', models.DateTimeField(null=True)),
                ('IsActive', models.BooleanField()),
            ],
            options={
                'db_table': 'device_management',
            },
            managers=[
                ('objects', model_managers.administrate_model_manager.DeviceManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeviceManagementHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DeviceID', models.IntegerField()),
                ('DeviceBorrower', models.IntegerField()),
                ('DeviceBorrorwTime', models.DateTimeField()),
                ('DeviceReturnTime', models.DateTimeField()),
            ],
            options={
                'db_table': 'device_management_history',
            },
            managers=[
                ('objects', model_managers.administrate_model_manager.DeviceHistoryManager()),
            ],
        ),
    ]
